swagger: '2.0'
basePath: /api/3
consumes:
  - application/json
produces:
  - application/json
info:
  version: 3.0.0
  title: Project-FiFo

###################
# PARAMETERS
###################
parameters:
  fulllistParam:
    name: full-list
    in: query
    description: Enables or disables the return ov objects rather then uuids
    required: false
    allowEmptyValue: false
    type: boolean
    format: boolean
  fulllistfieldsParam:
    name: full-list-fields
    in: query
    description: Fields to be returnd when full-list is enabled
    required: false
    format: string
    type: array
    items:
      type: string
    collectionFormat: csv

###################
# DEFINITIONS
###################
definitions:
  uuid:
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
  metrics:
    type: object
    properties:
      '<key>':
        type: array
        items:
          type: integer
  permission:
    type: array
    items:
      type: string
  requirement:
    allOf:
      - type: object
        properties:
          weight:
            type: string
            enum:
              - 'scale'
          attribute:
            type: string
          low:
            type: integer
          high:
            type: integer
      - type: object
        properties:
          weight:
            type: string
            enum:
              - 'random'
          low:
            type: integer
          high:
            type: integer
      - type: object
        properties:
          attribute:
            type: string
          condition:
            type: string
            enum:
              - '>='
              - '=<'
              - '>'
              - '<'
              - '=:='
              - '=/='
              - 'superset'
              - 'subset'
              - 'disjoint'
              - 'element'
          value:
            allOf:
              - type: string
              - type: integer
              - type: array
                items:
                  type: integer
              - type: array
                items:
                  type: string
          weight:
            allOf:
              - type: string
                enum:
                  - must
                  - cant
              - type: integer
  apikey:
    properties:
      bearer:
        type: string
      id:
        $ref: '#/definitions/uuid'
  token:
    properties:
      client:
        $ref: '#/definitions/uuid'
      expiery:
        type: integer
      scope:
        type: array
        items:
          type: string
      type:
        enum:
          - 'refresh'
          - 'access'
      id:
        $ref: '#/definitions/uuid'
    required:
      - type
      - scope
      - id
  cdr:
    properties:
      action:
        type: string
      metadata:
        type: object
      resource:
        $ref: '#/definitions/uuid'
      timestamp:
        type: integer
  user:
    properties:
      keys:
        type: object
      metadata:
        type: object
      name:
        type: string
      org:
        $ref: '#/definitions/uuid'
      orgs:
        type: array
        items:
          $ref: '#/definitions/uuid'
      permissions:
        type: array
        items:
          $ref: '#/definitions/permission'
      roles:
        type: array
        items:
          $ref: '#/definitions/uuid'
      tokens:
        type: array
        items:
          $ref: '#/definitions/token'
      uuid:
        $ref: '#/definitions/uuid'
      yubikeys:
        type: array
        items:
          type: string
  client:
    properties:
      client_id:
        type: string
      metadata:
        type: object
      name:
        type: string
      redirect_uris: # TODO: THIS IS NOT CORRECT
        type: array
        items:
          type: string
      permissions:
        type: array
        items:
          $ref: '#/definitions/permission'
      roles:
        type: array
        items:
          $ref: '#/definitions/uuid'
      type:
        type: string
      uuid:
        $ref: '#/definitions/uuid'
  role:
    properties:
      metadata:
        type: object
      name:
        type: string
      permissions:
        type: array
        items:
          $ref: '#/definitions/permission'
      uuid:
        $ref: '#/definitions/uuid'
  org:
    properties:
      metadata:
        type: object
      name:
        type: string
      triggers:
        type: array
        items:
          type: string
      uuid:
        $ref: '#/definitions/uuid'
  grouping:
    properties:
      config:
        type: object
      metadata:
        type: object
      elements:
        type: array
        items:
          $ref: '#/definitions/uuid'
      name:
        type: string
      uuid:
        $ref: '#/definitions/uuid'
      type:
        type: string
        enum:
          - stack
          - cluster
  dataset:
    properties:
      metadata:
        type: object
      description:
        type: string
      image_size:
        type: integer
      imported:
        type: integer
      name:
        type: string
      networks:
        type: array
        items:
          type: object
      os:
        type: string
      requirements:
        type: array
        items:
          $ref: '#/definitions/requirement'
      status:
        type: string
      type:
        type: string
      version:
        type: string
      uuid:
        $ref: '#/definitions/uuid'
  hypervisor:
    properties:
      alias:
        type: string
      metadata:
        type: object
      characteristics:
        type: object
      etherstubs:
        type: object
      host:
        type: string
      networks:
        type: array
        items:
          type: string
      path:
        type: array
        items:
          type: string
      pools:
        type: object
      port:
        type: integer
      resources:
        type: object
      services:
        type: object
      sysinfo:
        type: object
      version:
        type: string
      virtualisation:
        type: array
        items:
          type: string
      uuid:
        $ref: '#/definitions/uuid'
  vm:
    type: object
    properties:
      alias:
        type: string
      backups:
        type: object
        properties:
          comment:
            type: string
          files:
            type: object
            properties:
              '<file>':
                type: object
                properties:
                  sha1:
                    type: string
                  size:
                    type: integer
          local:
            type: boolean
          local_size:
            type: integer
          pending:
            type: boolean
          state:
            type: string
            enum:
              - completed
              - pending
          xml:
            type: boolean
      config:
        type: object
      created_at:
        type: integer
      created_by:
        $ref: '#/definitions/uuid'
      dataset:
        $ref: '#/definitions/uuid'
      hypervisor:
        $ref: '#/definitions/uuid'
      package:
        $ref: '#/definitions/uuid'
      owner:
        $ref: '#/definitions/uuid'
      hostname_mappings:
        type: object
      iprange_mappings:
        type: object
      network_mappings:
        type: object
      uuid:
        $ref: '#/definitions/uuid'
      docker:
        type: object
  iprange:
    properties:
      metadata:
        type: object
      name:
        type: string
      gateway:
        type: string
      netmask:
        type: string
      network:
        type: string
      tag:
        type: string
      free:
        type: array
        items:
          type: string
      used:
        type: array
        items:
          type: string
      uuid:
        $ref: '#/definitions/uuid'
  network:
    properties:
      metadata:
        type: object
      name:
        type: string
      ipranges:
        type: array
        items:
          $ref: '#/definitions/uuid'
      uuid:
        $ref: '#/definitions/uuid'
  package:
    properties:
      metadata:
        type: object
      name:
        type: string
      compression:
        type: string
      cpu_cap:
        type: integer
      quota:
        type: integer
      ram:
        type: integer
      org_resources:
        type: object
      requirements:
        type: array
        items:
          $ref: '#/definitions/requirement'
      uuid:
        $ref: '#/definitions/uuid'
###################
# Path definitions
###################
paths:
  #------------------
  # OAuth2
  #------------------
  '/oauth2/auth':
    get:
      tags:
        - 'oauth'
      summary: OAuth2 Authorization Code Request and Implict Request
      description: |
        This endpoint serves both 'Authorization Code Request' and the
        'Implict Request' parts of the OAuth 2 workflow depending on the
        *response_type* provided.
      parameters:
        - name: response_type
          in: query
          type: string
          required: true
          enum:
            - 'code'
            - 'token'
        - name: client_id
          in: query
          type: string
          required: true
          description: ID of the client
        - name: redirect_uri
          in: query
          type: string
          description: The URI redirected to at the end of the OAuth2 dance
          required: true
        - name: state
          in: query
          type: string
          description: client state that gets passed back to the redirect uri
        - name: scope
          in: query
          type: string
          description: list of scopes to claim
      responses:
        200:
          description: Redirect to new user
    post:
      tags:
        - 'oauth'
      summary: Authorization Code grant and 
      description: |
        Serves both the Authorization Code Grant and Implict Grant
        * [4.1.1 Authorization Code Grant / Authorization Request](https://tools.ietf.org/html/rfc6749#section-4.1.1)
        * [4.2.1 Implicit Grant / Authorization Request](https://tools.ietf.org/html/rfc6749#section-4.2.1)
      consumes:
        - 'application/x-www-form-urlencoded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              response_type:
                type: string
                enum:
                  - 'code'
                  - 'token'
              client_id:
                type: string
                description: ID of the client
              redirect_uri:
                type: string
                description: The URI redirected to at the end of the OAuth2 dance
              scope:
                type: array
                items:
                  type: string
                description: list of scopes to claim
              state:
                type: string
                description: client state that gets passed back to the redirect uri
              username:
                type: string
                description: the username
              password:
                type: string
                description: the password
      responses:
        302:
          description: |
            Redirects to the redirect_uri with the `access_code` as query
            parameter.
  '/oauth2/token':
    post:
      tags:
        - oauth
      summary: OAuth2 token endpoint
      description: |
        This endpoint serves the following parts of the OAuth workflow, please
        see the linked specifications for details as it does not fit the swagger
        spec definition language.
        * [4.1.3 Access Token Request](https://tools.ietf.org/html/rfc6749#section-4.1.3)
        * [4.4.2 Access Token Request](https://tools.ietf.org/html/rfc6749#section-4.4.2)
        * [4.2.1 Implicit Grant / Authorization Request](https://tools.ietf.org/html/rfc6749#section-4.2.1)
        * [4.3 Resource Owner Password Credentials Grant](https://tools.ietf.org/html/rfc6749#section-4.3)
        * [6 Refreshing an Access Token](https://tools.ietf.org/html/rfc6749#section-6)
      consumes:
        - 'application/x-www-form-urlencoded'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              grant_type:
                type: string
                enum:
                  - authorization_code
                  - client_credentials
                  - refresh_token
                  - password
      responses:
        200:
          description: The token was sucessfully provided.
          schema:
            type: object
            properties:
              access_token:
                type: string
              token_type:
                type: string
                enum:
                  - 'bearer'
              expires_in:
                type: integer
              refresh_token:
                type: string
                description: Only for Access Token Request
              scope:
                type: array
                items:
                  type: string