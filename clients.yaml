swagger: '2.0'
basePath: /api/2
consumes:
  - applicaiton/json
produces:
  - applicaiton/json
info:
  version: 2.0.0
  title: Project-FiFo
parameters:
  fulllistParam:
    name: full-list
    in: query
    description: Enables or disables the return ov objects rather then uuids
    required: false
    allowEmptyValue: false
    type: boolean
    format: boolean
  fulllistfieldsParam:
    name: full-list-fields
    in: query
    description: Fields to be returnd when full-list is enabled
    required: false
    format: string
    type: array
    items:
      type: string
    collectionFormat: csv
definitions:
  uuid:
    type: string
    pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
  permission:
    type: array
    items:
      type: string
  token:
    properties:
      client:
        $ref: '#/definitions/uuid'
      expiery:
        type: integer
      scope:
        type: array
        items:
          type: string
      type:
        enum:
          - 'refresh'
          - 'access'
      id:
        $ref: '#/definitions/uuid'
    required:
      - type
      - scope
      - id
  client:
    properties:
      client_id:
        type: string
      metadata:
        type: object
      name:
        type: string
      redirect_uris: # TODO: THIS IS NOT CORRECT
        type: array
        items:
          type: string 
      permissions:
        type: array
        items:
          $ref: '#/definitions/permission'
      roles:
        type: array
        items:
          $ref: '#/definitions/uuid'
      type:
        type: string
      uuid:
        $ref: '#/definitions/uuid'
  apikey:
    properties:
      bearer: 
        type: string
      id:
        $ref: '#/definitions/uuid'

paths:
  '/clients':
    get:
      tags:
        - 'clients'
      summary: Lists all clients visible to the user.
      description: |
        See Get Client for the fields available for 'full-list-fields'
      parameters:
        - $ref: '#/parameters/fulllistParam'
        - $ref: '#/parameters/fulllistfieldsParam'
      responses:
        '200':
          description: list of clients
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/definitions/client'
                - $ref: '#/definitions/uuid'
    post:
      tags:
        - 'clients'
      summary: Creates a new client
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              client:
                description: the ClientID
                type: string
              secre:
                description: the secret for the client
                type: string
      responses:
        303:
          description: Redirect to new client
  '/clients/{uuid}':
    get:
      tags:
        - 'clients'
      summary: Reads a client
      parameters:
        - name: uuid
          in: path
          description: uuid of the client
          required: true
          type: string
      responses:
        '200':
          description: returns a client
          schema:
            $ref: '#/definitions/client'
    put:
      tags:
        - 'clients'
      summary: Changes the 'secret' of a client
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              secret:
                description: New secret for the client
                type: string
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 'clients'
      summary: Deletes a Client
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
      responses:
        '200':
          description: OK
  '/clients/{uuid}/permissions/{permission}':
    get:
      tags:
        - 'clients'
      summary: |
        Tests if a client has is allowed to perform an action. Please note 
        that 403 here does not mean the client is not allowed but that the 
        requesting token was not allowed to test for the client!
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: permission
          in: path
          description: |
            the permission to test as path i.e. 'some/funky/permission'
          required: true
          type: string
      responses:
        '200':
          description: OK
    put:
      tags:
        - 'clients'
      summary: Grants a permission> to a client 
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: permission
          in: path
          description: |
            the permission to test as path i.e. 'some/funky/permission'
          required: true
          type: string
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 'clients'
      summary: Revokes a permission to a client 
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: permission
          in: path
          description: |
            the permission to test as path i.e. 'some/funky/permission'
          required: true
          type: string
      responses:
        '200':
          description: OK
  '/clients/{uuid}/uris':
    post:
      tags:
        - 'clients'
      summary: Adds an URI to the valid redirect URIâ€™s for this client 
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              uri:
                description: the URI to add
                type: string         
      responses:
        '200':
          description: OK
  '/clients/{uuid}/uris/{id}':
    delete:
      tags:
        - 'clients'
      summary: Deletes key with given uuid for client with given uuid
      parameters:
        - name: uuid
          in: path
          description: UUID of the client
          required: true
          type: string
        - name: id
          in: path
          description: id of the URI to delete
          required: true
          type: integer
      responses:
        '200':
          description: OK